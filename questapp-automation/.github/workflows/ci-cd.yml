name: QuestApp Automation CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run regression tests daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  JAVA_VERSION: '21'
  MAVEN_VERSION: '3.9.6'

jobs:
  # Smoke Tests - Fast feedback
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Setup Chrome
      uses: browser-actions/setup-chrome@v1
      
    - name: Run Smoke Tests
      run: |
        chmod +x mvnw
        ./mvnw clean test -Psmoke -Dtest.headless=true
        
    - name: Upload TestNG Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: smoke-test-reports
        path: |
          test-output/
          target/surefire-reports/
        retention-days: 7
        
    - name: Generate Allure Report
      run: |
        ./mvnw allure:report
      if: always()
      
    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: smoke-allure-report
        path: target/allure-report/
        retention-days: 7

  # Unit Tests - Code quality
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run Unit Tests
      run: |
        chmod +x mvnw
        ./mvnw clean test-compile
        
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results
        path: target/test-classes/
        retention-days: 7

  # Integration Tests - Full test suite
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [smoke-tests]
    
    strategy:
      matrix:
        browser: [chrome, chrome-headless]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Setup Chrome
      uses: browser-actions/setup-chrome@v1
      
    - name: Run Integration Tests
      run: |
        chmod +x mvnw
        ./mvnw clean test -P${{ matrix.browser }} -Dtest.headless=true
        
    - name: Upload TestNG Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-test-reports-${{ matrix.browser }}
        path: |
          test-output/
          target/surefire-reports/
        retention-days: 7
        
    - name: Generate Allure Report
      run: |
        ./mvnw allure:report
      if: always()
      
    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-allure-report-${{ matrix.browser }}
        path: target/allure-report/
        retention-days: 7

  # Parallel Tests - Performance testing
  parallel-tests:
    name: Parallel Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [smoke-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Setup Chrome
      uses: browser-actions/setup-chrome@v1
      
    - name: Run Parallel Tests
      run: |
        chmod +x mvnw
        ./mvnw clean test -Pparallel -Dtest.headless=true
        
    - name: Upload TestNG Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: parallel-test-reports
        path: |
          test-output/
          target/surefire-reports/
        retention-days: 7

  # Regression Tests - Comprehensive testing
  regression-tests:
    name: Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    needs: [smoke-tests, integration-tests]
    if: github.event_name == 'schedule' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Setup Chrome
      uses: browser-actions/setup-chrome@v1
      
    - name: Run Regression Tests
      run: |
        chmod +x mvnw
        ./mvnw clean test -Pregression -Dtest.headless=true
        
    - name: Upload TestNG Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: regression-test-reports
        path: |
          test-output/
          target/surefire-reports/
        retention-days: 14
        
    - name: Generate Allure Report
      run: |
        ./mvnw allure:report
      if: always()
      
    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: regression-allure-report
        path: target/allure-report/
        retention-days: 14

  # Security Tests - Security scanning
  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [smoke-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run Security Tests
      run: |
        chmod +x mvnw
        ./mvnw clean test -Dtest=SecurityTest -Dtest.headless=true
        
    - name: Upload Security Test Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-test-reports
        path: |
          test-output/
          target/surefire-reports/
        retention-days: 7

  # Performance Tests - Load testing
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [smoke-tests]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Setup Chrome
      uses: browser-actions/setup-chrome@v1
      
    - name: Run Performance Tests
      run: |
        chmod +x mvnw
        ./mvnw clean test -Dtest=PerformanceTest -Dtest.headless=true
        
    - name: Upload Performance Test Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-test-reports
        path: |
          test-output/
          target/surefire-reports/
        retention-days: 7

  # Notifications
  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [smoke-tests, integration-tests, parallel-tests, regression-tests, security-tests, performance-tests]
    if: always()
    
    steps:
    - name: Notify Success
      if: needs.smoke-tests.result == 'success' && needs.integration-tests.result == 'success'
      run: |
        echo "‚úÖ All tests passed successfully!"
        echo "üìä Test results available in artifacts"
        
    - name: Notify Failure
      if: needs.smoke-tests.result == 'failure' || needs.integration-tests.result == 'failure'
      run: |
        echo "‚ùå Some tests failed!"
        echo "üîç Check the test reports in artifacts for details"
        exit 1 